/*
 * Name        : Application.rss
 * Description : Application resource file 
 * Project     : This file is part of OpenMAR, an Open Mobile Augmented Reality browser
 * Website     : http://OpenMAR.org
 *
 * Copyright (c) 2010 David Caabeiro
 *
 * All rights reserved. This program and the accompanying materials are made available 
 * under the terms of the Eclipse Public License v1.0 which accompanies this 
 * distribution, and is available at http://www.eclipse.org/legal/epl-v10.html
 *
 */

NAME ARXX	// 4 letter ID

//  INCLUDES
#include <eikon.rh>
#include <avkon.rsg>
#include <avkon.rh>
#include <appinfo.rh>

#include "Application.hrh"
#include "Application.rls"

RESOURCE RSS_SIGNATURE
{
}

RESOURCE TBUF r_default_document_name
{
}

RESOURCE EIK_APP_INFO
{
//    cba = R_AVKON_SOFTKEYS_OPTIONS_EXIT;
}

RESOURCE AVKON_VIEW r_splash_view
{
}

RESOURCE AVKON_VIEW r_ar_view
{
//    cba     = R_AVKON_SOFTKEYS_OPTIONS_EXIT;
//    menubar = r_ar_menubar;
//    toolbar = r_ar_toolbar;
}

RESOURCE MENU_BAR r_ar_menubar
{
    titles =
    {
        MENU_TITLE { menu_pane = r_ar_menu; }
    };
}

RESOURCE MENU_PANE r_ar_menu
{
    items =
    {
        MENU_ITEM
        {
            command = EAbout;
            txt = qtn_about;
        },
        MENU_ITEM
        {
            command = EAknSoftkeyExit;
            txt = qtn_exit;
        }
    };
}

/*
RESOURCE AVKON_TOOLBAR r_ar_toolbar
{
//    flags = KAknToolbarFixed | KAknToolbarDsaMode;
    flags = KAknToolbarFixed;
    items =
    {
        TBAR_CTRL
        {
            type = EAknCtButton;
            id = EHelp;
            control = AVKON_BUTTON
            {
                flags = KAknButtonNoFrame;
                states =
                {
                    AVKON_BUTTON_STATE
                    {
                        txt = "Option1";
                        helptxt = "";
                    }
                };
            };
        }
        ,
        TBAR_CTRL
        {
            type = EAknCtButton;
            id = EHelp;
            control = AVKON_BUTTON
            {
                flags = KAknButtonNoFrame;
                states =
                {
                    AVKON_BUTTON_STATE
                    {
                        txt = "Option2";
                        helptxt = "";
                    }
                };
            };
        }
        ,
        TBAR_CTRL
        {
            type = EAknCtButton;
            id = EHelp;
            control = AVKON_BUTTON
            {
                flags = KAknButtonNoFrame;
                states =
                {
                    AVKON_BUTTON_STATE
                    {
                        txt = "Option3";
                        helptxt = "";
                    }
                };
            };
        }
        ,
        TBAR_CTRL 
        { 
            type = EAknCtToolbarExtension; 
            id = ECmdDataSource; 

            control = AVKON_TOOLBAR_EXTENSION 
            {
                flags = KAknButtonNoFrame | KAknTbExtensionDsaMode | KAknTbExtensionTransparent;
            };
        }
    };
}
*/



RESOURCE DIALOG r_about_query_dialog
{
    flags = EGeneralQueryFlags | EEikDialogFlagNoBorder | EEikDialogFlagNoShadow;
    buttons = R_AVKON_SOFTKEYS_OK_EMPTY;
    items=
    {
        DLG_LINE
        {
            type = EAknCtPopupHeadingPane;
            id = EAknMessageQueryHeaderId;
            itemflags = EEikDlgItemNonFocusing;
            control = AVKON_HEADING
            {
            };
        },
        DLG_LINE
        {
            type = EAknCtMessageQuery;
            id = EAknMessageQueryContentId;
            control = AVKON_MESSAGE_QUERY
            {
            };
        }
    };
}

RESOURCE DIALOG r_wait_dialog
{
    flags = EAknWaitNoteFlags;
    buttons = R_AVKON_SOFTKEYS_CANCEL;
    items =
    {
        DLG_LINE
        {
            type = EAknCtNote;
            id = EDialogWait;
            control = AVKON_NOTE
            {
                layout = EWaitLayout;
                singular_label = qtn_wait_text;
                animation = R_QGN_GRAF_WAIT_BAR_ANIM;
            };
        }
    };
}


RESOURCE TBUF r_caption_string        { buf = qtn_caption_string; }
RESOURCE TBUF r_about_dialog_title    { buf = qtn_about_dialog_title; }
RESOURCE TBUF r_about_dialog_text     { buf = qtn_about_dialog_text; }

RESOURCE TBUF r_screenshot_text_ok    { buf = qtn_screenshot_text_ok; }
RESOURCE TBUF r_screenshot_text_error { buf = qtn_screenshot_text_error; }


RESOURCE LOCALISABLE_APP_INFO r_localisable_app_info
{
    short_caption = qtn_caption_string;
    caption_and_icon =
    CAPTION_AND_ICON_INFO
    {
        caption = qtn_caption_string;

        number_of_icons = 1;
        icon_file = "\\resource\\apps\\OpenMAR_0x2002E1AB.mif";
    };
}
